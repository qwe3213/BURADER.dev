<?xml version="1.0" encoding="UTF-8"?>
<!-- DTD지정  -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.itwillbs.mappers.qualityMapper">

<!-- ////////////////////////// 품질 관리 //////////////////////////// -->
<!-- 품질관리 목록 -->
	<select id="qualityList" resultType="com.itwillbs.domain.ProductionVO" >
	    select *
		from production a,
	     	 product b,
	    	 qc q
		where a.product_id = b.product_id
		and a.production_id = q.production_id
	</select>
<!-- 품질관리 목록 -->

<!-- 검수 상세 -->
	<select id="qualityInfo" resultType="com.itwillbs.domain.ProductionVO">
		select *
		from production a,
	     	 product b,
	    	 qc q,
	    	 employee e
		where a.product_id = b.product_id
		and a.production_id = q.production_id
		and q.qc_emp = e.emp_id
		and q.qc_num = #{qc_num}
	</select>
<!-- 검수 상세 -->
	<select id="defInfo" resultType="com.itwillbs.domain.ProductionVO">
		select *
		from qc q,
			 defective d
		where q.qc_num = d.qc_num
		and q.qc_num = #{qc_num}
	</select>

<!--    검수 등록    -->
	<!-- 작업지시번호 조회 -->
		<select id="insertSearch" resultType="com.itwillbs.domain.ProductionVO">
			select *
			from production a,
		     	 product b,
		     	 pr_complete c
			where a.product_id = b.product_id
			and a.production_id = c.production_id
			and a.production_id = #{production_id}
		</select>
	<!-- 작업지시번호 조회 -->
	<!-- cont_id 자동 카운트 -->
 	<select id="getLastGeneratedNumber" resultType="java.lang.String">
        SELECT qc_num FROM qc ORDER BY qc_num DESC LIMIT 1
    </select>
	<!-- cont_id 자동 카운트 -->
	
	 
	<!-- 검수 정보 DB등록 -->
		<insert id="qInsertDB">
			insert into qc
			(qc_num, qc_emp, qc_date, qc_qty, qc_status, production_id, total_defQty, del_qcStatus)
			values (#{qc_num}, #{qc_emp}, now(), #{qc_qty}, '완료', #{production_id}, #{total_defQty}, '0')
		</insert>
		<update id="prUpdate">
			update product
			set product_qty = (product_qty+#{product_qty})
			where product_id = #{product_id}
		</update>
		<update id="prUpdate2">
			update production
			set qc_id = #{qc_num}, workOrder_status = '완료', production_qty = #{product_qty}
			where production_id = #{production_id}
		</update>
		<insert id="qInsertDB2" >
			insert into defective
			(qc_num, def_code, def_qty,production_id)
			values (#{qc_num},#{def_code},#{def_qty},#{production_id})
		</insert>
	<!-- 검수 정보 DB등록 -->
	
	<!-- 검수 정보 DB삭제 -->
		<update id="delQcStatus">
			update qc
			set del_qcStatus = '1'
			where qc_num = #{qc_num}
		</update>
		<update id="delQcProduct">
			update product
			set product_qty = (product_qty - #{production_qty})
			where product_id = #{product_id}
		</update>
		<update id="delQcProNull">
			update production
			set qc_id = NULL, workOrder_status = '진행중'
			where production_id = #{production_id}
		</update>
		<delete id="delDefective" >
			delete from defective
			where qc_num = #{qc_num}
		</delete>
	<!-- 검수 정보 DB등록 -->
<!--    검수 등록    -->
<!-- ////////////////////////// 품질 관리 //////////////////////////// -->

<!-- ////////////////////////// 공병 관리 //////////////////////////// -->
	<!-- 공병 목록 가져오기 -->
		<select id="bottleList" resultType="com.itwillbs.domain.ProductionVO">
		select *
		from empty_bottle
	</select>
	<!-- 공병 목록 가져오기 -->
	<!-- 공병 수량 DB등록 -->
	<select id="btISearch" resultType="com.itwillbs.domain.ProductionVO">
		select *
		from empty_bottle
		where bt_date = #{bt_date}
	</select>
	<insert id="btInsert">
		insert into empty_bottle
		(bt_date,bt_qty,bt_emp,del_bottle,bt_status)
		values (#{bt_date}, #{bt_qty}, #{bt_emp},'0','대기')
	</insert>
	<!-- 공병 수량 DB등록 -->
	<!-- 공병 불량 DB등록 -->
	<update id="btUpdate">
		update empty_bottle
		set bt_defQty = #{bt_defQty},
			bt_status = '완료'
		where bt_date = #{bt_date}
	</update>
<!-- 	<select id="todayDef" resultType="com.itwillbs.domain.ProductionVO"> -->
<!-- 		select bt_defQty -->
<!-- 		FROM empty_bottle -->
<!-- 		WHERE bt_date = date_format(#{bt_date}, '%Y-%m-%d %H:%i:%s') -->
<!-- 	</select> -->
	<update id="btMaUpdate">
		update material
		set ma_qty = (ma_qty+(#{bt_qty}-#{bt_defQty}))
		where ma_name = '공병'
	</update>
	<!-- 공병 불량 DB등록 -->
	
<!-- ////////////////////////// 공병 관리 //////////////////////////// -->

</mapper>